/*
 * Generated by MyEclipse Struts Template path: templates/java/JavaClass.vtl
 */
package biz.qianyan.search.express.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import biz.qianyan.search.express.document.ReleatedKeyword;
import biz.qianyan.search.express.query.ReleatedSearcher;
import biz.qianyan.search.express.web.Navbar;
import biz.qianyan.search.express.web.form.PatentForm;
import biz.qianyan.search.express.web.util.PageNavFactory;
import biz.qianyan.search.express.web.util.RegionSelect;
import biz.qianyan.search.patent.document.PatentDocument;
import biz.qianyan.search.patent.query.PatentSearcher;

/**
 * MyEclipse Struts Creation date: 04-23-2008 XDoclet definition:
 * 
 * @struts.action path="/patent" name="patentForm" input="/patent.jsp" scope="request" validate="true"
 */
public class PatentAction extends Action {
    private static final Log log = LogFactory.getLog(PatentAction.class);

    /*
     * Generated Methods
     */
    private PatentSearcher   searcher;

    private ReleatedSearcher releatedsearcher;

    /**
     * @param releatedsearcher
     *            the releatedsearcher to set
     */
    public final void setReleatedsearcher(ReleatedSearcher releatedsearcher) {
        this.releatedsearcher = releatedsearcher;
    }

    public void setSearcher(PatentSearcher searcher) {
        this.searcher = searcher;
    }

    private RegionSelect regionselect;

    /**
     * @param regionselect
     *            the regionselect to set
     */
    public void setRegionselect(RegionSelect regionselect) {
        this.regionselect = regionselect;
    }

    /**
     * Method execute
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
                                 HttpServletRequest request, HttpServletResponse response) {
        PatentForm patentForm = (PatentForm) form;
        Integer curpage = patentForm.getP();
        patentForm.setProvinceselect(regionselect.getProvincesName());
        if ((curpage == null) || (curpage <= 0)) {
            curpage = 1;
        }
        /*
         * if(patentForm.getQ()==null||"".equals(patentForm.getQ().trim())){ return mapping.findForward("index"); }
         */
        Navbar page = new Navbar(curpage);

        List<PatentDocument> list = searcher.search(patentForm, page);
        if (patentForm.getR() == 1) {
            for (PatentDocument ed : list) {
                if (ed.getTitle().length() > 14) {
                    ed.setTitle(ed.getTitle().substring(0, 14) + "..");
                }
            }
            request.setAttribute("result", list);
            return mapping.findForward("left");
        }
        List<ReleatedKeyword> releatedlist = releatedsearcher.search(patentForm.getQ(), page);
        log.info("page allrows:" + page.getAllrows());
        request.setAttribute("result", list);
        request.setAttribute("form", patentForm);
        request.setAttribute("page", page);
        request.setAttribute("releated", releatedlist);
        request.setAttribute("releatedsize", releatedlist.size());
        request.setAttribute("pagenav", PageNavFactory.getPagenav(patentForm, page));
        return mapping.getInputForward();
    }
}